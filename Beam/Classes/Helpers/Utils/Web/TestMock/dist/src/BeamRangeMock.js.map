{"version":3,"file":"BeamRangeMock.js","sourceRoot":"","sources":["../../src/BeamRangeMock.ts"],"names":[],"mappings":"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","sourcesContent":["import {BeamNode, BeamRange, BeamDOMRectList} from \"@beam/native-beamtypes\"\nimport {BeamDOMRectMock} from \"./BeamDOMRectMock\"\n\nexport class BeamRangeMock implements BeamRange {\n  cloneRange(): BeamRange {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  collapse(toStart?: boolean): void {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  compareBoundaryPoints(how: number, sourceRange: BeamRange): number {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  comparePoint(node: BeamNode, offset: number): number {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  createContextualFragment(fragment: string): DocumentFragment {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  deleteContents(): void {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  detach(): void {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  extractContents(): DocumentFragment {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  getClientRects(): BeamDOMRectList {\n    const rect = new BeamDOMRectMock(0, 0, 0, 0)\n    return new BeamDOMRectList([rect])\n  }\n\n  insertNode(node: BeamNode): void {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  intersectsNode(node: BeamNode): boolean {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  isPointInRange(node: BeamNode, offset: number): boolean {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  selectNodeContents(node: BeamNode): void {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  setEnd(node: BeamNode, offset: number): void {\n    this.endOffset = offset\n    this.endContainer = node\n  }\n\n  setEndAfter(node: BeamNode): void {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  setEndBefore(node: BeamNode): void {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  setStart(node: BeamNode, offset: number): void {\n    this.startOffset = offset\n    this.startContainer = node\n  }\n\n  setStartAfter(node: BeamNode): void {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  setStartBefore(node: BeamNode): void {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  surroundContents(newParent: BeamNode): void {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  toString(): string {\n    return \"mock range content\"\n  }\n\n  END_TO_END: number\n  END_TO_START: number\n  START_TO_END: number\n  START_TO_START: number\n  collapsed: boolean\n  endContainer: BeamNode\n  endOffset: number\n  startContainer: BeamNode\n  startOffset: number\n  commonAncestorContainer: BeamNode\n\n  cloneContents(): DocumentFragment {\n    return this.startContainer as any\n  }\n\n  private node: BeamNode\n\n  getBoundingClientRect(): DOMRect {\n    return {\n      ...this.node.bounds,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      toJSON: () => \"toJSON value not implemented\"\n    }\n  }\n\n  selectNode(node: BeamNode): void {\n    this.node = node\n    const parentBox = node.parentElement.getBoundingClientRect()\n    this.node.bounds.x = this.node.bounds.x || parentBox.x\n    this.node.bounds.y = this.node.bounds.y || parentBox.y\n    this.node.bounds.width = this.node.bounds.width || parentBox.width\n    this.node.bounds.height = this.node.bounds.height || parentBox.height\n  }\n}\n"]}