{"version":3,"file":"EventsMock.js","sourceRoot":"","sources":["../../src/EventsMock.ts"],"names":[],"mappings":";;;AAAA,MAAa,UAAU;IAOrB;QANA;;;WAGG;QACH,WAAM,GAAG,EAAE,CAAA;QAGT,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;IAC1B,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;IAC3B,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAA;IAC1C,CAAC;IAED,eAAe,CAAC,IAAY;QAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,KAAK,CAAC,IAAI,IAAI,IAAI,CAAA;QAC3B,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,GAAG,EAAE,CAAA;IAClB,CAAC;IAED,GAAG,CAAC,GAAG,IAAI;QACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAA;IACpC,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAA;IAC9B,CAAC;CACF;AApCD,gCAoCC","sourcesContent":["export class EventsMock {\n  /**\n   * Recorded calls to this mock UI\n   * @type {[]}\n   */\n  events = []\n\n  constructor() {\n    this.log(\"instantiated\")\n  }\n\n  get eventsCount() {\n    return this.events.length\n  }\n\n  get latestEvent() {\n    return this.events[this.eventsCount - 1]\n  }\n  \n  findEventByName(name: string) {\n    return this.events.find(event => {\n      return event.name == name\n    })\n  }\n\n  clearEvents() {\n    this.events = []\n  }\n\n  log(...args) {\n    console.log(this.toString(), args)\n  }\n\n  toString() {\n    return this.constructor.name\n  }\n}\n"]}