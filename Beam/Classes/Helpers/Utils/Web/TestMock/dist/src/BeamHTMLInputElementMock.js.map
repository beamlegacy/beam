{"version":3,"file":"BeamHTMLInputElementMock.js","sourceRoot":"","sources":["../../src/BeamHTMLInputElementMock.ts"],"names":[],"mappings":";;;AACA,+DAAyD;AAEzD,MAAa,wBAAyB,SAAQ,yCAAmB;IAC/D,KAAK;QACH,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAA;IAC5C,CAAC;IAOD,IAAI,IAAI;QACN,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,CAAA;QACtD,OAAO,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,CAAA;IACzB,CAAC;IAED,IAAI,IAAI,CAAC,KAAa;QACpB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,KAAK,CAAA;IACpD,CAAC;CACF;AAlBD,4DAkBC","sourcesContent":["import {BeamHTMLInputElement} from \"@beam/native-beamtypes\"\nimport {BeamHTMLElementMock} from \"./BeamHTMLElementMock\"\n\nexport class BeamHTMLInputElementMock extends BeamHTMLElementMock implements BeamHTMLInputElement {\n  focus() {\n    throw new Error(\"Method not implemented.\")\n  }\n  srcset?: string\n  currentSrc?: string\n  src?: string\n  id?: string\n  value: string\n\n  get type(): string {\n    const attribute = this.attributes.getNamedItem(\"type\")\n    return attribute?.value\n  }\n\n  set type(value: string) {\n    this.attributes.getNamedItem(\"type\").value = value\n  }\n}\n"]}