{"version":3,"file":"BeamWindowMock.js","sourceRoot":"","sources":["../../src/BeamWindowMock.ts"],"names":[],"mappings":";;;AASA,+DAAyD;AACzD,yDAAmD;AACnD,yDAAmD;AAEnD,MAAa,kBAAkB;IAA/B;QACE,WAAM,GAAG,EAAE,CAAA;IAKb,CAAC;IAHC,WAAW,CAAC,OAAO;QACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,aAAa,EAAE,OAAO,EAAC,CAAC,CAAA;IAClD,CAAC;CACF;AAND,gDAMC;AAED,MAAa,sBAAuB,SAAQ,yCAAmB;CAQ9D;AARD,wDAQC;AAED,MAAa,cAAc;IACvB,eAAe,CAAC,MAAU;QACxB,+CAA+C;QAC/C,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,CAAA;QAC5C,CAAC,CAAC,CAAA;IACJ,CAAC;CACJ;AAPD,wCAOC;AAED,MAAsB,cAAkB,SAAQ,yCAAmB;IAMjE,YAAsB,MAAwB,IAAI,mCAAgB,EAAE,EAAE,WAAyB,IAAI,mCAAgB,EAAE;QACnH,KAAK,EAAE,CAAA;QALT,mBAAc,GAAG,IAAI,sBAAsB,EAAE,CAAA;QAgB7C,WAAM,GAAG,IAAI,cAAc,EAAE,CAAA;QAiC7B,YAAO,GAAG,CAAC,CAAA;QACX,YAAO,GAAG,CAAC,CAAA;QA5CT,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAA;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,CAAC,CAAA;IAC/B,CAAC;IACD,QAAQ,CAAC,MAAc,EAAE,MAAc;QACrC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAA;IAC5C,CAAC;IAED,UAAU,CAAC,IAAY,IAAG,CAAC;IAM3B,MAAM,CAAC,MAAc,EAAE,MAAc;QACnC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;QACrB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;IACvB,CAAC;IAMD,iBAAiB,CAAC,IAAqB;QACrC,OAAO,IAAI,CAAC,cAAc,CAAA;IAC5B,CAAC;IAED,gBAAgB,CAAC,EAAmB,EAAE,MAAe;QACnD,IAAI,MAAM,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAA;SACxE;QACD,OAAO,EAAE,CAAC,KAAK,CAAA;IACjB,CAAC;IAED,IAAI,CAAC,GAAY,EAAE,IAAa,EAAE,KAAc,EAAE,OAAiB;QACjE,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,EAAE,CAAC,CAAA;QAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,mCAAgB,EAAE,EAAE,IAAI,mCAAgB,CAAC,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC,CAAC,CAAA;IAC/E,CAAC;CAQF;AArDD,wCAqDC","sourcesContent":["import {\n  BeamCrypto,\n  BeamHTMLElement,\n  BeamLocation,\n  BeamMessageHandler,\n  BeamVisualViewport,\n  BeamWebkit,\n  BeamWindow\n} from \"@beam/native-beamtypes\"\nimport {BeamEventTargetMock} from \"./BeamEventTargetMock\"\nimport {BeamLocationMock} from \"./BeamLocationMock\"\nimport {BeamDocumentMock} from \"./BeamDocumentMock\"\n\nexport class MessageHandlerMock implements BeamMessageHandler {\n  events = []\n\n  postMessage(payload): void {\n    this.events.push({name: \"postMessage\", payload})\n  }\n}\n\nexport class BeamVisualViewportMock extends BeamEventTargetMock implements BeamVisualViewport {\n  height: number\n  offsetLeft: number\n  offsetTop: number\n  pageLeft: number\n  pageTop: number\n  scale: number\n  width: number\n}\n\nexport class BeamCryptoMock implements BeamCrypto {\n    getRandomValues(buffer: []) {\n      // Really basic mock for getting random numbers\n      return buffer.map(item => {\n        return Math.floor(Math.random() * 9999999)\n      })\n    }\n}\n\nexport abstract class BeamWindowMock<M> extends BeamEventTargetMock implements BeamWindow<M> {\n\n  visualViewport = new BeamVisualViewportMock()\n\n  readonly document: BeamDocumentMock\n\n  protected constructor(doc: BeamDocumentMock = new BeamDocumentMock(), location: BeamLocation = new BeamLocationMock()) {\n    super()\n    this.document = doc\n    this.location = location\n    this.visualViewport.scale = 1\n  }\n  scrollTo(xCoord: number, yCoord: number) {\n    throw new Error(\"Method not implemented.\")\n  }\n  onunload: () => void\n  matchMedia(arg0: string) {}\n  addListener: () => void\n  crypto = new BeamCryptoMock()\n  frameElement: any\n  frames: any\n\n  scroll(xCoord: number, yCoord: number): void {\n    this.scrollX = xCoord\n    this.scrollY = yCoord\n  }\n\n  webkit: BeamWebkit<M>\n\n  abstract create(doc: BeamDocumentMock, location: BeamLocation): BeamWindowMock<M>\n\n  getEventListeners(_win: BeamWindow<any>) {\n    return this.eventListeners\n  }\n\n  getComputedStyle(el: BeamHTMLElement, pseudo?: string): CSSStyleDeclaration {\n    if (pseudo) {\n      throw new Error(\"getComputedStyle not implemented for pseudo elements\")\n    }\n    return el.style\n  }\n\n  open(url?: string, name?: string, specs?: string, replace?: boolean): BeamWindow<M> | null {\n    console.log(`opening ${url}`)\n    return this.create(new BeamDocumentMock(), new BeamLocationMock({href: url}))\n  }\n\n  innerHeight\n  innerWidth\n  location\n  origin\n  scrollX = 0\n  scrollY = 0\n}\n"]}