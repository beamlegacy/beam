import { BeamNodeMock } from "./BeamNodeMock";
import { BeamElement, BeamElementCSSInlineStyle, BeamNode, BeamHTMLCollection } from "@beam/native-beamtypes";
export declare class BeamElementMock extends BeamNodeMock implements BeamElement, BeamElementCSSInlineStyle {
    readonly tagName: string;
    style: CSSStyleDeclaration;
    attributes: NamedNodeMap;
    classList: DOMTokenList;
    clientLeft: number;
    clientTop: number;
    offsetLeft: number;
    offsetTop: number;
    offsetParent: BeamElement;
    scrollLeft: number;
    scrollTop: number;
    href: string;
    scrollHeight: number;
    scrollWidth: number;
    focus(): void;
    _height: number;
    _width: number;
    querySelectorResult: {};
    constructor(tagName: string, attributes?: NamedNodeMap, props?: {});
    setQuerySelectorResult(query: string, element: BeamElementMock): void;
    cloneNode(): BeamElement;
    querySelectorAll(query: string): BeamElementMock[];
    removeAttribute(pointDatasetKey: any): void;
    setAttribute(qualifiedName: string, value: string): void;
    getAttribute(qualifiedName: string): string;
    dataset: any;
    set width(value: number);
    get width(): number;
    get height(): number;
    set height(value: number);
    appendChild(node: BeamNode): BeamNode;
    private get _children();
    get children(): BeamHTMLCollection;
    get innerHTML(): string;
    get outerHTML(): string;
    toString(): string;
    getBoundingClientRect(): DOMRect;
    getClientRects(): DOMRectList;
}
