{"version":3,"file":"BeamEmbedHelper.js","sourceRoot":"","sources":["../../src/BeamEmbedHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  BeamElement,\n  BeamHTMLElement,\n  BeamWindow,\n  MessageHandlers\n} from \"@beam/native-beamtypes\"\nimport {dequal as isDeepEqual} from \"dequal\"\n\nexport class BeamEmbedHelper {\n  embedPattern = \"__EMBEDPATTERN__\"\n  embedRegex: RegExp\n  // Used when the embed iframe navigates after loading the first url\n  firstLocationLoaded?: Location\n  win: BeamWindow<MessageHandlers>\n\n  constructor(win: BeamWindow) {\n    this.win = win\n    this.embedRegex = new RegExp(this.embedPattern, \"i\")\n    this.firstLocationLoaded = this.win.location\n  }\n\n  /**\n   * Returns true if element is Embed.\n   *\n   * @param {BeamElement} element\n   * @param {BeamWindow} win\n   * @return {*}  {boolean}\n   * @memberof BeamEmbedHelper\n   */\n   isEmbeddableElement(element: any): boolean {\n     const isInsideIframe = this.isOnFullEmbeddablePage()\n     // Check if current window location is matching embed url and is inside an iframe context\n     if (isInsideIframe) {\n       return isInsideIframe\n      }\n      \n    // check the element if it's embeddable\n    switch (this.win.location.hostname) {\n      case \"twitter.com\":\n        return this.isTweet(element)\n        break\n      case \"www.youtube.com\":\n        return (\n          this.isYouTubeThumbnail(element) ||\n          this.isEmbeddableIframe(element) ||\n          this.win.location.pathname.includes(\"/embed/\")\n        )\n        break\n      default:\n        return this.isEmbeddableIframe(element)\n        break\n    }\n  }\n\n  /**\n   * Returns the window location or first loaded location that matches \n   * the embed or iframe regex\n   *\n   * @return {*}  {(string | undefined)}\n   * @memberof BeamEmbedHelper\n   */\n  getEmbeddableWindowLocationLastUrls: string[]\n  getEmbeddableWindowLocationLastResult: string\n  getEmbeddableWindowLocation(): string | undefined {\n    const urls = [ this.win.location.href, this.firstLocationLoaded.href ]\n    if (isDeepEqual(urls, this.getEmbeddableWindowLocationLastUrls)) {\n      return this.getEmbeddableWindowLocationLastResult\n    }\n    \n    const result = urls.find(url => {\n      return this.embedRegex.test(url)\n    })\n    \n    this.getEmbeddableWindowLocationLastUrls = urls\n    this.getEmbeddableWindowLocationLastResult = result\n\n    return result\n  }\n\n  isOnFullEmbeddablePage() {\n    return (\n      (\n        this.urlMatchesEmbedProvider([this.win.location.href, this.firstLocationLoaded.href])\n      ) &&\n      this.isInsideIframe()\n    )\n  }\n\n  isEmbeddableIframe(element: BeamElement): boolean {\n    if ([\"iframe\"].includes(element.tagName.toLowerCase())) {\n      return this.urlMatchesEmbedProvider([element.src])\n    }\n    return false\n  }\n\n  urlMatchesEmbedProviderLastUrls: string[]\n  urlMatchesEmbedProviderLastResult: boolean\n  urlMatchesEmbedProvider(urls: string[]): boolean {\n    if (isDeepEqual(urls, this.urlMatchesEmbedProviderLastUrls)) {\n      return this.urlMatchesEmbedProviderLastResult\n    }\n    const result = urls.some((url) => {\n      if (!url) return false\n      return this.embedRegex.test(url) || url.includes(\"youtube.com/embed\")\n    })\n\n    this.urlMatchesEmbedProviderLastUrls = urls\n    this.urlMatchesEmbedProviderLastResult = result\n\n    return result\n  }\n\n  /**\n   * Returns true if current window context is not the top level window context\n   *\n   * @return {*}  {boolean}\n   * @memberof BeamEmbedHelper\n   */\n  isInsideIframe(): boolean {\n    try {\n      return window.self !== window.top\n    } catch (e) {\n      return true\n    }\n  }\n\n  /**\n   * Returns a url to the content to be inserted to the journal as embed.\n   *\n   * @param {BeamElement} element\n   * @param {BeamWindow} win\n   * @return {*}  {BeamHTMLElement}\n   * @memberof this\n   */\n  parseElementForEmbed(element: BeamElement): BeamHTMLElement {\n    const { hostname } = this.win.location\n\n    switch (hostname) {\n      case \"twitter.com\":\n        // see if we target the tweet html\n        return this.parseTwitterElementForEmbed(element)\n        break\n      case \"www.youtube.com\":\n        if (this.win.location.pathname.includes(\"/embed/\")) {\n          const videoId = window.location.pathname.split(\"/\").pop()\n          return this.createLinkElement(\n            `https://www.youtube.com/watch?v=${videoId}`\n          )\n        }\n        return this.parseYouTubeThumbnailForEmbed(element)\n        break\n      default:\n        if (element.src && this.urlMatchesEmbedProvider([element.src])) {\n          return this.createLinkElement(element.src)\n        }\n        break\n    }\n  }\n  /**\n   * Convert element found on twitter.com to a anchor elemnt containing the tweet url.\n   * returns undefined when element isn't a tweet\n   *\n   * @param {BeamElement} element\n   * @param {BeamWindow<any>} win\n   * @return {*}  {BeamHTMLElement}\n   * @memberof this\n   */\n  parseTwitterElementForEmbed(element: BeamElement): BeamHTMLElement {\n    if (!this.isTweet(element)) {\n      return\n    }\n\n    // We are looking for a url like: <username>/status/1318584149247168513\n    const linkElements = element.querySelectorAll(\"a[href*=\\\"/status/\\\"]\")\n    // return the href of the first element in NodeList\n    const href = linkElements?.[0].href\n\n    if (href) {\n      return this.createLinkElement(href)\n    }\n\n    return\n  }\n\n  /**\n   * Returns if the provided element is a tweet. Should only be run on twitter.com\n   *\n   * @param {BeamElement} element\n   * @return {*}  {boolean}\n   * @memberof this\n   */\n  isTweet(element: BeamElement): boolean {\n    return element.getAttribute(\"data-testid\") == \"tweet\"\n  }\n  /**\n   * Returns if the provided element is a YouTube Thumbnail. Should only be run on youtube.com\n   *\n   * @param {BeamElement} element\n   * @return {*}  {boolean}\n   * @memberof this\n   */\n  isYouTubeThumbnail(element: BeamElement): boolean {\n    const isThumb = Boolean(element?.href?.includes(\"/watch?v=\"))\n\n    if (isThumb) {\n      return true\n    }\n\n    const parentLinkElement = this.hasParentOfType(element, \"A\", 5)\n    return Boolean(parentLinkElement?.href?.includes(\"/watch?v=\"))\n  }\n\n  /**\n   * Returns parent of node type. Maximum allowed recursive depth is 10\n   *\n   * @static\n   * @param {BeamElement} node target node to start at\n   * @param {string} type parent type to search for\n   * @param {number} [count=10] maximum depth of recursion, defaults to 10\n   * @return {*}  {(BeamElement | undefined)}\n   * @memberof BeamEmbedHelper\n   */\n  hasParentOfType(\n    element: BeamElement,\n    type: string,\n    count = 10\n  ): BeamElement | undefined {\n    if (count <= 0) return null\n    if (type !== \"BODY\" && element?.tagName === \"BODY\") return null\n    if (!element?.parentElement) return null\n    if (type === element?.tagName) return element\n    const newCount = count--\n    return this.hasParentOfType(element.parentElement, type, newCount)\n  }\n\n  /**\n   * Parse html element into a Anchortag if it's a youtube thumbnail\n   *\n   * @param {BeamElement} element\n   * @return {*}  {BeamHTMLElement}\n   * @memberof this\n   */\n  parseYouTubeThumbnailForEmbed(element: BeamElement): BeamHTMLElement {\n    if (!this.isYouTubeThumbnail(element)) {\n      return\n    }\n\n    // We are looking for a url like: /watch?v=DtC8Trc2Fe0\n    if (element?.href?.includes(\"/watch?v=\")) {\n      return this.createLinkElement(element?.href)\n    }\n\n    // Check parent link element\n    const parentLinkElement = this.hasParentOfType(element, \"A\", 5)\n    if (parentLinkElement?.href?.includes(\"/watch?v=\")) {\n      return this.createLinkElement(parentLinkElement?.href)\n    }\n\n    return\n  }\n\n  /**\n   * Return BeamHTMLElement of an Anchortag with provided href attribute\n   *\n   * @param {string} href\n   * @return {*}  {BeamHTMLElement}\n   * @memberof this\n   */\n  createLinkElement(href: string): BeamHTMLElement {\n    const anchor = this.win.document.createElement(\"a\")\n    anchor.setAttribute(\"href\", href)\n    anchor.innerText = href\n    return anchor\n  }\n}\n"]}