{"version":3,"file":"BeamNamedNodeMap.js","sourceRoot":"","sources":["../../src/BeamNamedNodeMap.ts"],"names":[],"mappings":"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","sourcesContent":["export class BeamNamedNodeMap extends Object implements NamedNodeMap {\n  [index: number]: Attr\n\n  private readonly attrs: Attr[] = []\n\n  constructor(props = {}) {\n    super()\n    for (const p in props) {\n      if (Object.prototype.hasOwnProperty.call(props, p)) {\n        const attr: Attr = {\n          ATTRIBUTE_NODE: 0,\n          CDATA_SECTION_NODE: 0,\n          COMMENT_NODE: 0,\n          DOCUMENT_FRAGMENT_NODE: 0,\n          DOCUMENT_NODE: 0,\n          DOCUMENT_POSITION_CONTAINED_BY: 0,\n          DOCUMENT_POSITION_CONTAINS: 0,\n          DOCUMENT_POSITION_DISCONNECTED: 0,\n          DOCUMENT_POSITION_FOLLOWING: 0,\n          DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: 0,\n          DOCUMENT_POSITION_PRECEDING: 0,\n          DOCUMENT_TYPE_NODE: 0,\n          ELEMENT_NODE: 0,\n          ENTITY_NODE: 0,\n          ENTITY_REFERENCE_NODE: 0,\n          NOTATION_NODE: 0,\n          PROCESSING_INSTRUCTION_NODE: 0,\n          TEXT_NODE: 0,\n          addEventListener(\n              type: string,\n              listener: EventListenerOrEventListenerObject | null,\n              options: boolean | AddEventListenerOptions | undefined\n          ): void {\n            // TODO: Shouldn't we implement it?\n          },\n          appendChild<T>(newChild: T): T {\n            // TODO: Shouldn't we implement it?\n            return undefined\n          },\n          baseURI: \"\",\n          childNodes: undefined,\n          cloneNode(deep: boolean | undefined): Node {\n            // TODO: Shouldn't we implement it?\n            return undefined\n          },\n          compareDocumentPosition(other: Node): number {\n            return 0\n          },\n          contains(other: Node | null): boolean {\n            return false\n          },\n          dispatchEvent(event: Event): boolean {\n            return false\n          },\n          firstChild: undefined,\n          getRootNode(options: GetRootNodeOptions | undefined): Node {\n            return undefined\n          },\n          hasChildNodes(): boolean {\n            return false\n          },\n          insertBefore<T>(newChild: T, refChild: Node | null): T {\n            return undefined\n          },\n          isConnected: false,\n          isDefaultNamespace(namespace: string | null): boolean {\n            return false\n          },\n          isEqualNode(otherNode: Node | null): boolean {\n            return false\n          },\n          isSameNode(otherNode: Node | null): boolean {\n            return false\n          },\n          lastChild: undefined,\n          lookupNamespaceURI(prefix: string | null): string | null {\n            return undefined\n          },\n          lookupPrefix(namespace: string | null): string | null {\n            return undefined\n          },\n          namespaceURI: undefined,\n          nextSibling: undefined,\n          nodeName: \"\",\n          nodeType: 0,\n          nodeValue: undefined,\n          ownerDocument: undefined,\n          ownerElement: undefined,\n          parentElement: undefined,\n          parentNode: undefined,\n          prefix: undefined,\n          previousSibling: undefined,\n          removeChild<T>(oldChild: T): T {\n            return undefined\n          },\n          removeEventListener(\n              type: string,\n              callback: EventListenerOrEventListenerObject | null,\n              options: EventListenerOptions | boolean | undefined\n          ): void {\n            // TODO: Shouldn't we implement it?\n          },\n          replaceChild<T>(newChild: Node, oldChild: T): T {\n            return undefined\n          },\n          specified: false,\n          textContent: undefined,\n          normalize(): void {\n            // TODO: Shouldn't we implement it?\n          },\n          name: p,\n          localName: p,\n          value: props[p]\n        }\n        this.setNamedItem(attr)\n      }\n    }\n  }\n\n  get length(): number {\n    return this.attrs.length\n  }\n\n  getNamedItem(qualifiedName: string): Attr | null {\n    return this.attrs.find((a) => a.localName === qualifiedName)\n  }\n\n  getNamedItemNS(namespace: string | null, localName: string): Attr | null {\n    return this.getNamedItem(`${namespace}.${localName}`)\n  }\n\n  item(index: number): Attr | null {\n    return this.attrs[index]\n  }\n\n  removeNamedItem(qualifiedName: string): Attr {\n    const old = this.getNamedItem(qualifiedName)\n    const index = this.attrs.indexOf(old)\n    this.attrs.splice(index, 1)\n    return old\n  }\n\n  removeNamedItemNS(namespace: string | null, localName: string): Attr {\n    return this.removeNamedItem(namespace + \".\" + localName)\n  }\n\n  setNamedItem(attr: Attr): Attr | null {\n    const old = this.getNamedItem(attr.localName)\n    if (old) {\n      this.removeNamedItem(attr.localName)\n    }\n    this.attrs.push(attr)\n    return old\n  }\n\n  setNamedItemNS(attr: Attr): Attr | null {\n    return undefined\n  }\n\n  [Symbol.iterator](): IterableIterator<Attr> {\n    return this.attrs.values()\n  }\n\n  toString(): string {\n    return this.attrs.map((a) => `${a.name}=\"${a.value}\"`).join(\" \")\n  }\n}\n"]}