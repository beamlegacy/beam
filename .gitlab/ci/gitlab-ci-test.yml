xctests:
  timeout: 20 minutes
  dependencies: []
  stage: test
  artifacts:
    expire_in: 7d
    when: always
    paths:
      - cobertura.xml
      - fastlane/test_output/tests.xml
      - logs
    reports:
      cobertura: cobertura.xml
      junit: fastlane/test_output/tests.xml
  coverage: '/Test Coverage\: \d+(?:\.\d*)?\%/'
  only:
    - merge_requests
    - master
    - develop
  script:
    - pwd
    - time bundle exec fastlane tests
  after_script:
    - rm "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/Beam-test-${CI_JOB_ID}"*
    - mkdir -p logs
    - mv ${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Logs/Beam/*.log logs
    - rm -r "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Logs/Beam/Vinyl/${CI_JOB_ID}"
    - rm -r "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/BeamData-test-${CI_JOB_ID}"
  tags:
    - macos-mono
  interruptible: true

swift lint:
  timeout: 5 minutes
  dependencies: []
  stage: test
  artifacts:
    when: always
    paths:
      - fastlane/codequality_report.json
    reports:
      codequality: fastlane/codequality_report.json
  script:
    - bundle exec fastlane lint
  rules:
    - if: '$SWIFT_LINT_DISABLED'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  tags:
    - macos

xctests UI:
  timeout: 25 minutes
  dependencies: []
  stage: test
  artifacts:
    expire_in: 7d
    when: always
    paths:
      - cobertura.xml
      - fastlane/test_output/tests.xml
      - screenshots
      - logs
    reports:
      cobertura: cobertura.xml
      junit: fastlane/test_output/tests.xml
  coverage: '/Test Coverage\: \d+(?:\.\d*)?\%/'
  only:
    - merge_requests
    - master
    - develop
  script:
    - time bundle exec fastlane uitests
  after_script:
    - xcparse screenshots --activity-type attachmentContainer userCreated testAssertionFailure --test --os --model fastlane/test_output/Beam.xcresult screenshots
    - xcparse screenshots --test-status Failure --test --os --model fastlane/test_output/Beam.xcresult screenshots
    - find screenshots -type d -empty -delete
    - rm "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/Beam-test-${CI_JOB_ID}"*
    - rm "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/GRDB-test-${CI_JOB_ID}"*
    - mkdir -p logs
    - mv ${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Logs/Beam/*.log logs
    - rm -r "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/BeamData-test-${CI_JOB_ID}"
  tags:
    - macos-mono
  interruptible: true

js_test:
  stage: test
  image: node:16-alpine
  cache:
    key: .yarn-cache
  before_script:
    - yarn install
  only:
    - master
    - develop
    - merge_requests
  script:
    - make js_test
  coverage: '/All files\s+\|\s+([\d.]+)/'
  artifacts:
    reports:
      junit: ./Beam/Classes/Components/PointAndShoot/Web/junit.xml
      codequality: gl-codequality.json
  interruptible: true

coverage_check:
  dependencies: []
  stage: build
  needs: [xctests, xctests UI]
  rules:
    - if: '$COVERAGE_CHECK_DISABLED'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - scripts/code_coverage.sh
  tags:
    - macos
  interruptible: true
  allow_failure: true
