build for testing:
  # This will build an app that will be reused on UI Tests Thread
  timeout: 20 minutes
  dependencies: []
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^beta-.+/'
    - if: '$CI_COMMIT_BRANCH =~ /^release-.+/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  cache:
    - key: build-product-$CI_COMMIT_SHA
      paths:
          - derived_data/SourcePackages/
          - derived_data/Build/Products
      policy: push
  script:
    - time bundle exec fastlane build_for_testing
  after_script:
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/Beam-test-${CI_JOB_ID}"*
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos.dev/Data/Library/Application Support/Beam/Beam-test-${CI_JOB_ID}"*
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Logs/Beam/Vinyl/${CI_JOB_ID}"
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/BeamData-test-${CI_JOB_ID}"
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos.dev/Data/Library/Logs/Beam/Vinyl/${CI_JOB_ID}"
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos.dev/Data/Library/Application Support/Beam/BeamData-test-${CI_JOB_ID}"
  tags:
    - macos-mono
  interruptible: true

xctests:
  timeout: 20 minutes
  dependencies: []
  needs: []
  stage: test
  artifacts:
    expire_in: 7d
    when: always
    paths:
      - cobertura.xml
      - fastlane/test_output
      - logs
      - scan_results
      - allure-report
    reports:
      cobertura: cobertura.xml
      junit: fastlane/test_output/tests.xml
  coverage: '/Test Coverage\: \d+(?:\.\d*)?\%/'
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^beta-.+/'
    - if: '$CI_COMMIT_BRANCH =~ /^release-.+/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - pwd
    - time bundle exec fastlane tests
  after_script:
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/Beam-test-${CI_JOB_ID}"*
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos.dev/Data/Library/Application Support/Beam/Beam-test-${CI_JOB_ID}"*
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Logs/Beam/Vinyl/${CI_JOB_ID}"
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/BeamData-test-${CI_JOB_ID}"
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos.dev/Data/Library/Logs/Beam/Vinyl/${CI_JOB_ID}"
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos.dev/Data/Library/Application Support/Beam/BeamData-test-${CI_JOB_ID}"
    - mkdir -p logs
    - mv -f ${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Logs/Beam/*.log logs
    - mv -f ${HOME}/Library/Logs/scan/*.log logs
  tags:
    - macos-mono
  interruptible: true

UITestThread1:
  timeout: 25 minutes
  dependencies: []
  needs: ["build for testing"]
  stage: test
  artifacts:
    expire_in: 4d
    when: always
    paths:
      - cobertura.xml
      - fastlane/test_output
      - screenshots
      - allure-report
      - logs
    reports:
      cobertura: cobertura.xml
      junit: fastlane/test_output/tests.xml
  coverage: '/Test Coverage\: \d+(?:\.\d*)?\%/'
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^beta-.+/'
    - if: '$CI_COMMIT_BRANCH =~ /^release-.+/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  cache:
    - key: build-product-$CI_COMMIT_SHA
      paths:
          - derived_data/SourcePackages/
          - derived_data/Build/Products
      policy: pull
  script:
    - time bundle exec fastlane uitestsThread1
  after_script:
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/Beam-test-${CI_JOB_ID}"*
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/GRDB-test-${CI_JOB_ID}"*
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/BeamData-test-${CI_JOB_ID}"
    - rm -rf ${HOME}/cache/*
    - rm -rf ${HOME}/Downloads/*
    - mkdir -p logs
    - mv ${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Logs/Beam/*.log logs
    - mv ${HOME}/Library/logs/scan/*.log logs
  tags:
    - macos-mono
  interruptible: true

UITestThread2:
  timeout: 25 minutes
  dependencies: []
  needs: ["build for testing"]
  stage: test
  artifacts:
    expire_in: 4d
    when: always
    paths:
      - cobertura.xml
      - fastlane/test_output
      - screenshots
      - allure-report
      - logs
    reports:
      cobertura: cobertura.xml
      junit: fastlane/test_output/tests.xml
  coverage: '/Test Coverage\: \d+(?:\.\d*)?\%/'
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^beta-.+/'
    - if: '$CI_COMMIT_BRANCH =~ /^release-.+/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  cache:
    - key: build-product-$CI_COMMIT_SHA
      paths:
          - derived_data/SourcePackages/
          - derived_data/Build/Products
      policy: pull
  script:
    - time bundle exec fastlane uitestsThread2
  after_script:
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/Beam-test-${CI_JOB_ID}"*
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/GRDB-test-${CI_JOB_ID}"*
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/BeamData-test-${CI_JOB_ID}"
    - rm -rf ${HOME}/cache/*
    - rm -rf ${HOME}/Downloads/*
    - mkdir -p logs
    - mv ${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Logs/Beam/*.log logs
    - mv ${HOME}/Library/logs/scan/*.log logs
  tags:
    - macos-mono
  interruptible: true

UITestThread3:
  timeout: 25 minutes
  dependencies: []
  needs: ["build for testing"]
  stage: test
  artifacts:
    expire_in: 4d
    when: always
    paths:
      - cobertura.xml
      - fastlane/test_output
      - screenshots
      - allure-report
      - logs
    reports:
      cobertura: cobertura.xml
      junit: fastlane/test_output/tests.xml
  coverage: '/Test Coverage\: \d+(?:\.\d*)?\%/'
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^beta-.+/'
    - if: '$CI_COMMIT_BRANCH =~ /^release-.+/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  cache:
    - key: build-product-$CI_COMMIT_SHA
      paths:
          - derived_data/SourcePackages/
          - derived_data/Build/Products
      policy: pull
  script:
    - time bundle exec fastlane uitestsThread3
  after_script:
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/Beam-test-${CI_JOB_ID}"*
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/GRDB-test-${CI_JOB_ID}"*
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/BeamData-test-${CI_JOB_ID}"
    - rm -rf ${HOME}/cache/*
    - rm -rf ${HOME}/Downloads/*
    - mkdir -p logs
    - mv ${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Logs/Beam/*.log logs
    - mv ${HOME}/Library/logs/scan/*.log logs
  tags:
    - macos-mono
  interruptible: true

UITestThread4:
  timeout: 25 minutes
  dependencies: []
  needs: ["build for testing"]
  stage: test
  artifacts:
    expire_in: 4d
    when: always
    paths:
      - cobertura.xml
      - fastlane/test_output
      - screenshots
      - allure-report
      - logs
    reports:
      cobertura: cobertura.xml
      junit: fastlane/test_output/tests.xml
  coverage: '/Test Coverage\: \d+(?:\.\d*)?\%/'
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^beta-.+/'
    - if: '$CI_COMMIT_BRANCH =~ /^release-.+/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  cache:
    - key: build-product-$CI_COMMIT_SHA
      paths:
          - derived_data/SourcePackages/
          - derived_data/Build/Products
      policy: pull
  script:
    - time bundle exec fastlane uitestsThread4
  after_script:
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/Beam-test-${CI_JOB_ID}"*
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/GRDB-test-${CI_JOB_ID}"*
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/BeamData-test-${CI_JOB_ID}"
    - rm -rf ${HOME}/cache/*
    - rm -rf ${HOME}/Downloads/*
    - mkdir -p logs
    - mv ${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Logs/Beam/*.log logs
    - mv ${HOME}/Library/logs/scan/*.log logs
  tags:
    - macos-mono
  interruptible: true

UITestThread5:
  timeout: 25 minutes
  dependencies: []
  needs: ["build for testing"]
  stage: test
  artifacts:
    expire_in: 4d
    when: always
    paths:
      - cobertura.xml
      - fastlane/test_output
      - screenshots
      - allure-report
      - logs
    reports:
      cobertura: cobertura.xml
      junit: fastlane/test_output/tests.xml
  coverage: '/Test Coverage\: \d+(?:\.\d*)?\%/'
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^beta-.+/'
    - if: '$CI_COMMIT_BRANCH =~ /^release-.+/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  cache:
    - key: build-product-$CI_COMMIT_SHA
      paths:
          - derived_data/SourcePackages/
          - derived_data/Build/Products
      policy: pull
  script:
    - time bundle exec fastlane uitestsThread5
  after_script:
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/Beam-test-${CI_JOB_ID}"*
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/GRDB-test-${CI_JOB_ID}"*
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/BeamData-test-${CI_JOB_ID}"
    - rm -rf ${HOME}/cache/*
    - rm -rf ${HOME}/Downloads/*
    - mkdir -p logs
    - mv ${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Logs/Beam/*.log logs
    - mv ${HOME}/Library/logs/scan/*.log logs
  tags:
    - macos-mono
  interruptible: true
  
UITestThread6:
  timeout: 25 minutes
  dependencies: []
  needs: ["build for testing"]
  stage: test
  artifacts:
    expire_in: 4d
    when: always
    paths:
      - cobertura.xml
      - fastlane/test_output
      - screenshots
      - allure-report
      - logs
    reports:
      cobertura: cobertura.xml
      junit: fastlane/test_output/tests.xml
  coverage: '/Test Coverage\: \d+(?:\.\d*)?\%/'
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^beta-.+/'
    - if: '$CI_COMMIT_BRANCH =~ /^release-.+/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  cache:
    - key: build-product-$CI_COMMIT_SHA
      paths:
          - derived_data/SourcePackages/
          - derived_data/Build/Products
      policy: pull
  script:
    - time bundle exec fastlane uitestsThread6
  after_script:
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/Beam-test-${CI_JOB_ID}"*
    - rm -f "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/GRDB-test-${CI_JOB_ID}"*
    - rm -rf "${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Application Support/Beam/BeamData-test-${CI_JOB_ID}"
    - rm -rf ${HOME}/cache/*
    - rm -rf ${HOME}/Downloads/*
    - mkdir -p logs
    - mv ${HOME}/Library/Containers/co.beamapp.macos/Data/Library/Logs/Beam/*.log logs
    - mv ${HOME}/Library/logs/scan/*.log logs
  tags:
    - macos-mono
  interruptible: true

js_test:
  variables:
    RUN_BENCHMARK: "true"
  stage: test
  needs: []
  image: node:16-alpine
  before_script:
    - date
  cache:
    key: .yarn-cache
    paths:
    - .yarn
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^beta-.+/'
    - if: '$CI_COMMIT_BRANCH =~ /^release-.+/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - yarn install
    - yarn run buildpackages
    - yarn workspaces foreach run build
    - yarn run alltests-ci
    - yarn workspace @beam/native-collect run benchmark-show
  coverage: '/All files\s+\|\s+([\d.]+)/'
  artifacts:
    when: always
    reports:
      junit: ./junit.xml
      codequality: gl-codequality.json
  interruptible: true

coverage_check:
  image: registry.gitlab.com/beamgroup/beam/curl-jq
  before_script:
    - date
  dependencies: []
  stage: test
  needs: [xctests, UITestThread1, UITestThread2, UITestThread3, UITestThread4, UITestThread5, UITestThread6]
  rules:
    - if: '$COVERAGE_CHECK_DISABLED'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_MERGE_REQUEST_EVENT_TYPE == "merge_train"'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: '$CI_COMMIT_BRANCH =~ /^beta-.+/'
    - if: '$CI_COMMIT_BRANCH =~ /^release-.+/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - scripts/code_coverage.sh
  interruptible: true
  allow_failure: true
