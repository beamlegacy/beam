//
//  PasswordManagerHelper.swift
//  BeamUITests
//
//  Created by Andrii on 23.09.2021.
//

import Foundation
import XCTest

class PasswordManagerHelper: BaseView {
    
    let login = "qa@beamapp.co"
    let password = "somePassword"
    
    func doesAutofillPopupExist() -> Bool {
        return getAutofillPopupElement().waitForExistence(timeout: minimumWaitTimeout)
    }
    
    func getAutofillPopupElement() -> XCUIElement {
        return app.dialogs.containing(.staticText, identifier:login).element
    }
    
    func getOtherPasswordsOptionElement() -> XCUIElement {
        return app.staticTexts["Other Passwords..."]
    }
    
    @discardableResult
    func openPasswordPreferences() -> PasswordsTestView {
        getOtherPasswordsOptionElement().clickOnExistence()
        return PasswordsTestView()
    }
    
    func doesAutogeneratedPasswordPopupExist() -> Bool {
        return app/*@START_MENU_TOKEN@*/.staticTexts["Beam created a password for this site."]/*[[".dialogs.staticTexts[\"Beam created a password for this site.\"]",".staticTexts[\"Beam created a password for this site.\"]"],[[[-1,1],[-1,0]]],[0]]@END_MENU_TOKEN@*/.waitForExistence(timeout: minimumWaitTimeout)
    }
    
    func getAutogeneratedPasswordPopupIcon() -> XCUIElement {
        return app.images["autofill-password_xs"]
    }
    
    @discardableResult
    func useAutogeneratedPassword() -> WebTestView {
        app.staticTexts["Use Password"].clickOnExistence()
        return WebTestView()
    }
    
    @discardableResult
    func dontUseAutogeneratedPassword() -> WebTestView {
        app.staticTexts["Don't use"].clickOnExistence()
        return WebTestView()
    }
    
    func signInGoogle() -> Bool {
        staticText("Sign in").clickOnExistence()
        searchField("Email or phone").typeText(login)
        let nextButton = button("Next")
        nextButton.clickOnHittable()
        secureTextField("Enter your password").click()
        secureTextField("Enter your password").typeText(password)
        nextButton.click()
        return button("Google Account: qa none  \n(qa@beamapp.co)").waitForExistence(timeout: implicitWaitTimeout)
    }
    
}
